---
import type { GetStaticPaths, Page as AstroPage } from "astro";
import PageLayout from "@/layouts/PageLayout.astro";
import type { Card, Page } from "@/types";
import Friend from "@/components/Friend";
import { getCollection } from "astro:content";
import { FRIENDS_COLLECTION_NAME } from "@/constants";
import nftMetadata from "@/assets/nft_metadata.json"; // Import the JSON file
import Pagination from "@/partials/Pagination"; // Import the Pagination component
import { createPaginator } from "@/utils/createPaginator";
import config from "@/config";

const { page } = Astro.props;

export interface Props {
  page: AstroPage<Omit<Card, "Content">>;
}

const pageConfig: Page = {
  type: "index",
  title: "Friendly Links",
  description:
    "The flower path has never been swept for guests, the door is now open for you",
  image: import("src/assets/friends-bg.webp"),
  paginator: createPaginator(page, {
    includesFirstPageNumber: true,
  }),
  author: "default", // Add the author property
  cards: [], // Add the cards property
};

const friendEntries = await getCollection(FRIENDS_COLLECTION_NAME);
const paginationConfig = config.pagination;
// Get the current URL and extract the query parameters
const currentUrl = new URL(Astro.request.url);
const nftCurrentPage = Number(currentUrl.searchParams.get("nftPage")) || 1;

// Pagination logic for NFT metadata
const ITEMS_PER_PAGE =
  paginationConfig && paginationConfig.itemLimit
    ? paginationConfig.itemLimit
    : 9;
const nftTotalItems = nftMetadata.length;
const nftTotalPages = Math.ceil(nftTotalItems / ITEMS_PER_PAGE);
const nftStartIndex = (nftCurrentPage - 1) * ITEMS_PER_PAGE;
const nftEndIndex = nftStartIndex + ITEMS_PER_PAGE;
const paginatedNftMetadata = nftMetadata.slice(nftStartIndex, nftEndIndex);

const nftPageUrls = Array.from(
  { length: nftTotalPages },
  (_, i) => `?nftPage=${i + 1}`
);
---

<PageLayout
  page={page}
  hasFooter={true}
  hasHero={true}
  hasNavbar={true}
  hasComment={true}
  hasSidebar={false}
>
  <section class="mb-6 not-prose">
    <h2 class="text-xl font-bold mb-3 text-center">My friends</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      {friendEntries.map((entry: any) => <Friend {...entry.data} />)}
    </div>
  </section>
  <section class="mb-6 not-prose">
    <h2 class="text-xl font-bold mb-3 text-center">NFT Metadata</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      {
        paginatedNftMetadata.map((metadata) => (
          <div class="p-4 border rounded-lg">
            <h3 class="text-lg font-bold">{metadata.name}</h3>
            <p>{metadata.description}</p>
            <img
              src={metadata.image}
              alt={metadata.name}
              class="w-full h-auto rounded-lg"
            />
          </div>
        ))
      }
    </div>
    {
      paginationConfig && (
        <Pagination
          className="my-6 mx-auto max-w-fit"
          current={nftCurrentPage}
          total={nftTotalPages}
          pageUrls={nftPageUrls}
          config={paginationConfig}
        />
      )
    }
  </section>
</PageLayout>
